Trabajo Práctico: DOM
Alumno: Sarasúa, Agustín

Funcionando el 14/06, actualizaciones aclaradas abajo de todo.

Consigna:
Crear una aplicación web que inicialmente muestre una mesa vacía. Utilizando el tablero de control (un botón de agregar y uno de borrar) se podrán agregar, de a una, las sillas que rodean una mesa. La mesa soporta hasta 8 sillas. Inicialmente, será la mesa vacía y los botones de agregar o no. La aparición de sillas será a criterio propio.

Objetivos (para ver las funciones a usar):
	-Cuando el usuario apreta el botón agregar, aparecerá una silla (según mi orden que está puesto más abajo) en su posición determinada. Esto pasará hasta agregar las 8 sillas. 
	-Cuando el usuario apreta el botón borrar, desaparecerá una silla (el mismo orden pero para atrás) siendo esta la última agregada. Esto pasará hasta que no quede ni una silla.

Variables:
	-let registroSillas (integer): la usaremos para determinar cuál silla en específico se agregará o borrará. Será una variable de control que llevará el número de silla en el que se está situado. Entonces, se inicializará en 0.

Inicialmente, tendremos (en HTML):
	-Imagen de la mesa
	-Botón de agregar: un '+' de color verde.
	-Botón de borrar: un 'x' de color rojo.

Entonces, el body del HTML tendrá:
	contenido (div)
		opciones (div)
			botón agregar (button con clase 'agregar')
			botón borrar (button con clase 'borrar')
		sala (div)
			div con clase 'mesa'
			//aquí se irán agregando las sillas según se requiera

En CSS, tendremos que trabajar con:
	-botón agregar:
		linkeado a 'agregar.png' como fondo (que aparecerá una sola vez)	
	-botón borrar:
		linkeado a 'borrar.png' como fondo (que aparecerá una sola vez)
	-botón agregar y botón borrar
		estará a la izquierda cosa que no tape a las sillas
		tendrá borde redondeado
	-sala: 
		será el elemento 'padre' (position relative) de la mesa y las sillas
		con esta clase posicionaremos a todo el conjunto, preferentemente en el medio
	-mesa:
		position absolute (como 'hijo' de 'sala')
		linkeado a 'mesa.png' como fondo (que aparecerá una sola vez)
	-silla: todas las sillas tendrán esta clase
		serán 'hijos' del div 'sala' (position absolute)
		linkeado a 'silla.png' como fondo (idem mesa)
	-sillax: cada una tendrá una combinación particular, pero hay cosas que se repiten. Veamos caso por caso:
		-silla izquierda (silla1)
			rotación 270 grados con 'transform(rotate(270deg))'
			en eje Y, la misma posición que la mesa
			en eje X, antes que la mesa
		-silla abajo izquierda (silla2)
			rotación 180 grados
			en eje Y, más abajo que toda la mesa
			en eje X, en el 1er tercio de lo que ocupa la mesa
		-silla arriba izquierda (silla3)
			sin rotación
			en eje Y, más arriba que toda la mesa
			en eje X, idem silla2
		-silla abajo medio (silla4)
			rotación 180 grados
			en eje Y, idem silla2
			en eje X, en el 2do tercio de lo que ocupa la mesa
		-silla arriba medio (silla5)
			sin rotación
			en eje Y, idem silla3
			en eje X, idem silla4
		-silla abajo derecha (silla6)
			rotación 180 grados
			en eje Y, idem silla2
			en eje X, en el 3er tercio de lo que ocupa la mesa
		-silla arriba derecha (silla7)
			sin rotación
			en eje Y, idem silla3
			en eje X, idem silla6
		-silla derecha (silla8)
			rotación 90 grados
			en eje Y, idem silla 1
			en eje X, después que la mesa
	Entonces, podemos agrupar las sillas por características similares, quedando así:
		-silla1 y silla8:
			posición en eje Y más arriba que la mesa (a la midad de la altura de esta)
		-silla2, silla4, y silla6:
			rotación 180 grados
			en eje Y, abajo de la mesa
		-silla3, silla5 y silla7:
			//sin rotación
			en eje Y, arriba de la mesa
		-silla2 y silla 3:
			en eje X, en el 1er tercio de lo que ocupa la mesa 
		-silla4 y silla5:
			en eje X, en el 2do tercio de lo que ocupa la mesa
		-silla6 y silla7:
			en eje X, en el 3er tercio de lo que ocupa la mesa
		-silla1:
			rotación 270 grados
			en eje x, antes que la mesa
		-silla8:
			rotación 90 grados
			en eje X, después que la mesa

Funciones en JS:

	-Agregar silla:

		-Paso 1:
			Esperar que se requiera agregar una silla. Cuando esto suceda:
				ver cuántas sillas se pusieron antes. Si se pusieron todas:
					avisar que ya no hay sillas que poner
				si no se pusieron todas:
					anotar que agrego otra silla
					busco la siguiente silla (o sea una silla más pero con sus particularidaeds)
						la agrego a la mesa  

		-Paso 2:
			Cuando el usuario haga click en la imagen de clase 'agregar':
				recibe registroSillas
				si registroSillas es igual a 8:
					return (o sea, la función termina ahí al no haber nada más que hacer)
				en caso de que no:
					sumar uno a registroSillas
					creo (const) nuevaSilla como un nuevo elemento del documento de tag 'img'
					le linkeamos la imagen de la silla (src)
					le agregamos 2 clases
						la que tendrán todas las sillas: 'silla' 
						la correspondiente a esa silla (para así ubicarla)
							para ello, la clase será 'silla' + índice de la misma (registroSillas)						
					buscaremos al div con clase 'sala' (queryselector)
					le agregaremos (append) nuevaSilla

	-Eliminar silla

		-Paso 1:
			Esperar a que se requiera eliminar una silla. Cuando esto pase:
				encontrar la última silla que se agregó
				ver cuantas sillas están puestas. Si no hay ninguna:
					avisar que ya no hay sillas que sacar
				si quedan sillas por sacar:
					registrar que saco una silla
					veo donde estaba la última silla 
						la saco de la mesa

		-Paso 2:
			Cuando el usuario haga click en la imagen de clase 'borrar' (addEventListener):
				crear variable (const) sillaAEliminar (querySelector)
					será el elemento del doumento que tiene como clase 'sillax' siendo 'x' registroSillas
				si sillaAEliminar es 'nulo' (o sea cuando falle al buscar una silla de índice '0')
					return (fin de la función, no devuelve nada)
				en caso de que no:
					restar uno a registroSillas
					remuevo sillaAEliminar del div 'sala'(con removeChild)

ACTUALIZACIONES 21/06: 
A partir de lo visto en la clase del 18/06:
	-Se reemplazaron las imagenes 'borrar' y 'agregar' por botones
		la imágenes se pusieron como fondo mediante CSS
	-A la mesa con tag Img se la reemplazó por un div (misma clase)
		la imagen se puso mediante CSS idem anterior
	-Para linkear la imagen a las sillas, se usó CSS. Antes se hacía con JS.
	-Se acortaron las funciónes borrarSilla y agregarSilla:
		Sacando una condición innecesaria en el if
		Haciendo que, cuando se llegue al límite de sillas (0 u 8), termine la función
	-Se pensó trabajar con Flex en las sillas, pero implicaría alargar demasiado el código ya que en este caso se usa la lógica de sacar y agregar elementos al HTML. Preferí mantener la "esencia" (?) de este método antes que romper todo y prácticamente copiar lo que se hizo en la clase. De entender, se entendió, por lo que será utilizado en el próximo trabajo.